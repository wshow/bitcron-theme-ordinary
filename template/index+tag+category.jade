extends base
tag = request.url | replace('https://'+site.domain+'/tag/','')

block title
	if request.path.startswith('/tag/') and posts.tags
		title= '标签：' + tag + ' - ' + site.title
	elif request.path.startswith('/category/') and posts.category
		title= '分类：' + posts.category.title + ' - ' + site.title
	elif request.args.s
		title= '搜索：' + request.args.s + ' - ' + site.title
	else
		title= site.title


block content
	if request.path.startswith('/tag/') and posts.tags
		.labeltitle= '标签「%s」下的文章' %posts.tags.join("+")
	elif request.path.startswith('/category/') and posts.category
		.labeltitle= '分类「%s」下的文章' %posts.category.title
	elif request.args.s
		.labeltitle= '包含「%s」关键字的文章' %request.args.s

	.posts: for post in posts
		article
			ul.info
				li
					i.fa.fa-clock-o
					time(datetime= post.date.format('%Y-%m-%d'))= post.date.format('%Y.%m.%d')
				if post.category: li
					i.fa.fa-folder-open-o
					a(href=post.category.url)= post.category.title
				if post.tags: li
					i.fa.fa-tags
					for tag in post.tags
						a.tag(href='/tag/{{tag}}')= tag
				li
					i.fa.fa-file-word-o
					span= ('{0:,}'.format(post.raw_content.words or 0))
				li
					i.fa.fa-eye
					span= ('{0:,}'.format(post.visits or 0))
				li
					i.fa.fa-comment-o
					span= ('{0:,}'.format(post.comments_count or 0))

			.post
				header: h2
					a(href=post.url)= post.title
				.content= post.content.limit(150).no_pic.plain

	.sitepager
		+h.paginator(style='mini', pre_label='〈', next_label='〉')